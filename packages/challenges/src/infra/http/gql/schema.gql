# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""Challenge model"""
type Challenge {
  id: ID!
  title: String!
  description: String!
  createdAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ListChallengesResponse {
  challenges: [Challenge!]!
  total: Int!
  page: Int!
  itemsPerPage: Int!
}

type EditChallengeResponse {
  challenge: Challenge!
}

"""Answer model"""
type Answer {
  id: ID!
  challengeId: String!
  repositoryUrl: String!
  status: ANSWER_STATUS!
  grade: Int
  createdAt: DateTime!
}

"""Available statuses for answer submissions"""
enum ANSWER_STATUS {
  PENDING
  ERROR
  DONE
}

type ListAnswersResponse {
  answers: [Answer!]!
  total: Int!
  page: Int!
  itemsPerPage: Int!
}

"""Custom UUID scalar type"""
scalar UUID

type Query {
  listChallenges(listChallengesFiltersInput: ListChallengesFiltersInput!): ListChallengesResponse!
  listAnswers(listAnswesInput: ListAnswersInput!): ListAnswersResponse!
}

input ListChallengesFiltersInput {
  titleOrDescription: String
  page: Float = 1
  itemsPerPage: Float = 10
}

input ListAnswersInput {
  filters: FiltersInput
  params: ParamsInput
}

input FiltersInput {
  challengeId: String
  startDate: DateTime
  endDate: DateTime
  status: ANSWER_STATUS
}

input ParamsInput {
  page: Float
  itemsPerPage: Float
}

type Mutation {
  createChallenge(createChallengeInput: CreateChallengeInput!): String!
  updateChallenge(editChallengeInput: EditChallengeInput!): EditChallengeResponse!
  deleteChallenge(id: String!): Boolean
  submitAnswer(submitAnswerInput: SubmitAnswerInput!): Answer!
}

input CreateChallengeInput {
  title: String!
  description: String!
}

input EditChallengeInput {
  id: ID!
  title: String
  description: String
}

input SubmitAnswerInput {
  challengeId: String!
  repositoryUrl: String!
}