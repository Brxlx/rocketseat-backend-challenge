# version: "3"

services:
  # postgres:
  #   container_name: challenge_postgres
  #   image: "bitnami/postgresql"
  #   restart: always
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     - POSTGRESQL_USERNAME=docker
  #     - POSTGRESQL_PASSWORD=docker
  #     - POSTGRESQL_DATABASE=rocketseat_challenge
  #   volumes:
  #     - "postgresql_data:/bitnami/postgresql"

  # zookeeper:
  #   container_name: challenge_zookeeper
  #   image: "bitnami/zookeeper:3"
  #   ports:
  #     - "2181:2181"
  #   volumes:
  #     - "zookeeper_data:/bitnami"
  #   environment:
  #     - ALLOW_ANONYMOUS_LOGIN=yes
  #   networks:
  #     - app-net

  # kafka:
  #   container_name: challenge_kafka
  #   image: "bitnami/kafka:2"
  #   ports:
  #     - "9092:9092"
  #   volumes:
  #     - "kafka_data:/bitnami"
  #   environment:
  #     - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
  #     - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
  #     - ALLOW_PLAINTEXT_LISTENER=yes
  #   depends_on:
  #     - zookeeper
  #   networks:
  #     - app-net

  kafka:
    image: docker.io/bitnami/kafka:3.9.0
    ports:
      - "9092:9092"
      - "9094:9094" # Porta para comunicação externa
    environment:
      - KAFKA_CFG_NODE_ID=1001
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1001@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server kafka:9092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5
    
    volumes:
      - "kafka_data:/bitnami"
    networks:
      - app-net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "9090:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka
    networks:
    - app-net

networks:
  app-net:
    driver: bridge

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  # postgresql_data:
  #   driver: local
